install.packages(tidyr)
install.packages("tidyr")
runApp()
install.packages("shinyjs")
runApp()
runApp()
install.packages(c("ade4", "assertthat", "BH", "colorspace", "DBI", "digest", "dplyr", "ggplot2", "ggrepel", "ggthemes", "htmlwidgets", "jsonlite", "leaflet", "mime", "R6", "Rcpp", "reshape2", "rgdal", "rgeos", "RSQLite", "scales", "shiny", "shinythemes", "sp", "stringi", "stringr", "yaml"))
install.packages(c("ade4", "assertthat", "BH", "colorspace",
install.packages(c("ade4", "assertthat", "BH", "colorspace", "DBI", "digest", "dplyr", "ggplot2", "ggrepel", "ggthemes", "htmlwidgets", "jsonlite", "leaflet", "mime", "R6", "Rcpp", "reshape2", "rgdal", "rgeos", "RSQLite", "scales", "shiny", "shinythemes", "sp", "stringi", "stringr", "yaml"))
install.packages(c("ade4", "assertthat", "BH", "colorspace",
install.packages("shinyjs")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp()
lenght(OH_ponctuels)
length(OH_ponctuels)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
#SQl to R
library(RSQLite)
library(rgdal)
library(rgeos)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
runApp()
shiny::runApp()
runApp()
vars_suppr <- c("QGIS_ID", "geometry", "geom_wkt")
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-var_suppr],proj4string=proj_2154)
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-var_suppr],proj4string=proj_2154)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-vars_suppr],proj4string=proj_2154)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(-12-13)],proj4string=proj_2154)
View(head(OH_geom_pg))
View(head(OH_geom_pt))
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 14)],proj4string=proj_2154)
View(head(OH_geom_pt))
View(head(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
View(head(OH_geom_pt))
View(head(OH_geom_pg))
head(OH_geom_pg)
head(OH_geom_pg@data)
head(OH_geom_pt@data)
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
rm(tab_pt,liste_pt)
liste_pg <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pg_source$geom_wkt, row.names(OH_geom_pg_source))
names(liste_pg) <- c(1:length(liste_pg))
tab_pg <- do.call(rbind,liste_pg)
OH_geom_pg <- SpatialPolygonsDataFrame(tab_pg, OH_geom_pg_source[,c(1:11, 15)])
rm(tab_pg,liste_pg)
liste_pl <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pl_source$geom_wkt, row.names(OH_geom_pl_source))
tab_pl <- do.call(rbind,liste_pl)
OH_geom_pl <- SpatialLinesDataFrame(tab_pl, OH_geom_pl_source[,c(1:11, 15)])
rm(tab_pl,liste_pl)
liste_ponctuels <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_ponctuels_source$geom_wkt, row.names(OH_ponctuels_source))
tab_ponctuels <- do.call(rbind,liste_ponctuels)
OH_ponctuels <- SpatialPointsDataFrame(tab_ponctuels, OH_ponctuels_source[,1:12],proj4string=proj_2154)
rm(tab_ponctuels,liste_ponctuels)
head(OH_ponctuels@data)
head(OH_ponctuels_source@data)
head(OH_ponctuels_source)
head(OH_geom_pg@data)
runApp()
shiny::runApp()
runApp()
library(shiny)
runApp()
#librairies generales
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
#SQl to R
library(RSQLite)
library(rgdal)
library(rgeos)
source("charge_data.R", local=TRUE)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
# View(ens_urb_total)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
traits_rive$DEBUT <- as.integer(traits_rive$DEBUT)
traits_rive$FIN <- as.integer(traits_rive$FIN)
## 2. Objets historiques
## PBM d'encoding (source et dest en UTF8 mais dans la connection DB est transformé :/) >> pour le moment réencodage ligne à ligne == dégueu
## import géométries complètes et tout en points
#--------- depuis shapes (exportés ci-dessous) pour aller + vite ----
## Attention pour le moment shape avec v_usage 11 et v_usage >70, date_deb < 0
# OH_geom_pg <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pg", stringsAsFactors = FALSE)
# OH_geom_pl <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pl", stringsAsFactors = FALSE)
# OH_geom_pt <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pt", stringsAsFactors = FALSE)
#----
#-------- Depuis sqlite----
#---- connexions ----
db_geom <- dbConnect(SQLite(), "data/OH_3geom_portees.sqlite")
OH <- dbGetQuery(db_geom, "select * from OH where V_USAGE != 11 and V_USAGE < 70 and APPARITION >= -25")
OH_geom_pt_source <- dbGetQuery(db_geom, "select * from OH_pt_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pl_source <- dbGetQuery(db_geom, "select * from OH_pl_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pg_source <- dbGetQuery(db_geom, "select * from OH_pg_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_ponctuels_source <- dbGetQuery(db_geom, "select * from OH_ponctuels where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
#---- conversion des tables en spatial data frame ----
# AVEC GEOMETRIE
##POINTS
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
rm(tab_pt,liste_pt)
##POLYGONES
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
install.packages(c("markdown", "memoise", "rgdal", "tidyr"))
install.packages(c("markdown", "memoise", "rgdal", "tidyr"))
EPSG = make_EPSG()
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
library(RSQLite)
library(rgdal)
library(rgeos)
runApp()
shiny::runApp()
runApp()
palette <- brewer.pal(6,"Set1"
palette <- brewer.pal(6,"Set1")
runApp()
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
shiny::runApp()
runApp()
shiny::runApp()
OH_pg_subset <- head(OH_geom_pg_4326)
couleurs_pg <- ~palette_fonctions(OH_pg_subset$tab@data$V_URB)
pal_legend <- palette_fonctions
val_legend <- OH_ponctuels_subset$tab@data$V_URB_NOM
val_legend <- OH_pg_subset$tab@data$V_URB_NOM
val_legend <- OH_pg_subset$tab$tab$V_URB_NOM
couleurs_pg <- ~palette_fonctions(OH_pg_subset$tab@data$V_URB)
pal_legend <- palette_fonctions
val_legend <- OH_pg_subset$tab$tab@data$V_URB_NOM
couleurs_pg <- ~palette_fonctions(OH_pg_subset$tab@data$V_URB)
pal_legend <- palette_fonctions
val_legend <- OH_pg_subset$tab$V_URB_NOM
title_legend <- "Valeurs urbaines des OH"}
title_legend <- "Valeurs urbaines des OH"
leafletProxy() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset$tab,
stroke = TRUE,
weight=1,
opacity=legende$alpha_polygones,
color=legende$couleurs_pg,
group="géometries",
popup=popup_pg)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset$tab,
stroke = TRUE,
weight=1,
opacity=legende$alpha_polygones,
color=legende$couleurs_pg,
group="géometries",
popup=popup_pg)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset$tab,
stroke = TRUE,
weight=1,
opacity=alpha_polygones,
color=couleurs_pg,
group="géometries",
popup=popup_pg)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset$tab,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries",
popup=popup_pg)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries",
popup=popup_pg)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries")
couleurs_pg <- ~palette_fonctions(OH_pg_subset$tab$V_URB)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries")
couleurs_pg <- ~palette_fonctions(OH_pg_subset$V_URB)
pal_legend <- palette_fonctions
val_legend <- OH_pg_subset$tab$V_URB_NOM
title_legend <- "Valeurs urbaines des OH"
OH_pg_subset <- head(OH_geom_pg_4326)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries")
couleurs_pg <- ~palette_fonctions(OH_pg_subset$V_URB)
pal_legend <- palette_fonctions
val_legend <- OH_pg_subset$V_URB_NOM
title_legend <- "Valeurs urbaines des OH"
OH_pg_subset <- head(OH_geom_pg_4326)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries")
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries")
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = pal_legend, values = val_legend, opacity = 1)
leaflet() %%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = pal_legend(), values = val_legend, opacity = 1)
leaflet() %%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = ~pal_legend, values = val_legend, opacity = 1)
leaflet() %%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = pal_legend, values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = pal_legend, values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = pal_legend(), values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = ~palette_fonctions(), values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = ~palette_fonctions, values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = palette_fonctions, values = val_legend, opacity = 1)
View(OH_pg_subset)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = couleurs_pg, values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = palette_fonctions(OH_pg_subset), values = val_legend, opacity = 1)
pal_legend
pal_legend()
pal_legend(OH_pg_subset$V_URB)
~pal_legend(OH_pg_subset$V_URB)
OH_pg_subset$V_URB
OH_geom_pg_4326$V_URB
is.na(OH_geom_pg_4326)
is.na(OH_geom_pg_4326@data)
subset(OH_geom_pg_4326, V_URB >6)
subset(OH_geom_pg_4326, is.na(V_URB))
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal = couleurs_pg, values = val_legend, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, labels= OH_pg_subset$V_URB_NOM opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, labels= OH_pg_subset$V_URB_NOM, opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, labels= OH_pg_subset$V_URB_NOM, opacity = 1)
OH_pg_subset$V_URB_NOM
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, labels= unique(OH_pg_subset$V_URB_NOM), opacity = 1)
leaflet() %>%
clearShapes() %>%
clearMarkers() %>%
clearControls() %>%
addPolygons(data=OH_pg_subset,
stroke = TRUE,
weight=1,
color=couleurs_pg,
group="géometries") %>%
addLegend(position="bottomlef", title = title_legend, pal =pal_legend, values =  OH_pg_subset$V_URB, labels= c("bla","blou"), opacity = 1)
runApp()
