baseGroups = c("clair","sombre","satellite"),
overlayGroups = c("géometries", "ensembles urbains", "traits de rive"),
options=layersControlOptions(autoZIndex=TRUE)
) %>%
hideGroup(c("traits de rive","ensembles urbains"))  %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addCircles(data=OH_geom_pt_4326,
radius=10,
color=~palette_fonctions(OH_geom_pt_4326@data$V_URB),
stroke = FALSE,
fillOpacity = 0.7,
group="géometries",
popup=popup_pt_tout) %>%
addPolylines(data=OH_geom_pl_4326,
weight=1,
color=~palette_fonctions(OH_geom_pl_4326@data$V_URB),
opacity= 0.7,
group="géometries",
popup = popup_pl_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, values = OH_ponctuels_4326@data$V_URB, opacity = 1, labels("bla", "bla", "bla", "bla", "bla", "bla"))
leaflet() %>%
setView(lat=47.394211, lng=0.687247, zoom = 15) %>%
##tiles
addProviderTiles("CartoDB.Positron", group="clair") %>%
# addProviderTiles("CartoDB.DarkMatter", group="sombre") %>%
addProviderTiles("Esri.WorldImagery", group = "satellite") %>%
##layer control
addLayersControl(
baseGroups = c("clair","sombre","satellite"),
overlayGroups = c("géometries", "ensembles urbains", "traits de rive"),
options=layersControlOptions(autoZIndex=TRUE)
) %>%
hideGroup(c("traits de rive","ensembles urbains"))  %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addCircles(data=OH_geom_pt_4326,
radius=10,
color=~palette_fonctions(OH_geom_pt_4326@data$V_URB),
stroke = FALSE,
fillOpacity = 0.7,
group="géometries",
popup=popup_pt_tout) %>%
addPolylines(data=OH_geom_pl_4326,
weight=1,
color=~palette_fonctions(OH_geom_pl_4326@data$V_URB),
opacity= 0.7,
group="géometries",
popup = popup_pl_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, values = OH_ponctuels_4326@data$V_URB, opacity = 1, labels=OH_ponctuels_4326$V_URB_NOM)
subset(OH_ponctuels_4326, DATE_DEB<=max(input$limites) & DATE_FIN>=min(input$limites) & #temps
V_URB %in% c(input$choix_fonctions[1:6]))
subset(OH_ponctuels_4326, DATE_DEB<=max(100) & DATE_FIN>=min(50) & #temps
V_URB %in% c(3))
nrow(subset(OH_ponctuels_4326, DATE_DEB<=max(100) & DATE_FIN>=min(50) & V_URB %in% c(3)))
OH_ponctuels4326[OH_ponctuels$DATE_DEB<=max(100) & OH_ponctuels$DATE_FIN>=min(50) & OH_ponctuels$V_URB %in% c(3))),]
OH_ponctuels4326[OH_ponctuels$DATE_DEB<=max(100) & OH_ponctuels$DATE_FIN>=min(50) & OH_ponctuels$V_URB %in% c(3),]
OH_ponctuels_4326[OH_ponctuels_4326$DATE_DEB<=max(100) & OH_ponctuels_4326$DATE_FIN>=min(50) & OH_ponctuels_4326$V_URB %in% c(3),]
runApp()
leaflet() %>%
setView(lat=47.394211, lng=0.687247, zoom = 15) %>%
##tiles
addProviderTiles("CartoDB.Positron", group="clair") %>%
# addProviderTiles("CartoDB.DarkMatter", group="sombre") %>%
addProviderTiles("Esri.WorldImagery", group = "satellite") %>%
##layer control
addLayersControl(
baseGroups = c("clair","sombre","satellite"),
overlayGroups = c("géometries", "ensembles urbains", "traits de rive"),
options=layersControlOptions(autoZIndex=TRUE)
) %>%
hideGroup(c("traits de rive","ensembles urbains"))  %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addCircles(data=OH_geom_pt_4326,
radius=10,
color=~palette_fonctions(OH_geom_pt_4326@data$V_URB),
stroke = FALSE,
fillOpacity = 0.7,
group="géometries",
popup=popup_pt_tout) %>%
addPolylines(data=OH_geom_pl_4326,
weight=1,
color=~palette_fonctions(OH_geom_pl_4326@data$V_URB),
opacity= 0.7,
group="géometries",
popup = popup_pl_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=palette_fonctions)
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=OH_ponctuels_4326@data$V_URB_NOM)
runApp()
leaflet() %>% addTiles() %>% addLegend(
position = 'bottomright',
colors = rgb(t(col2rgb(palette())) / 255),
labels = palette(), opacity = 1,
title = 'An Obvious Legend'
)
palette()
class(palette())
.call(OH_geom_pg_4326$NOM_USAGE)
call(OH_geom_pg_4326$NOM_USAGE)
_palette
c_palette
runApp()
class(OH_geom_pt_4326$V_URB_NOM)
runApp()
leaflet(df) %>%
addCircleMarkers(~x, ~y, color = ~pal(z)) %>%
addLegend(pal = pal, values = ~z, labFormat = labelFormat(
prefix = '(', suffix = ')%', between = ', ',
transform = function(x) 100 * x
))
leaflet(df) %>%
addCircleMarkers(~x, ~y, color = ~pal(z)) %>%
addLegend(pal = pal, values = ~z, labFormat = labelFormat(
prefix = '(', suffix = ')%', between = ', ',
transform = function(x) 100 * x
))
df = data.frame(x = rnorm(100), y = rexp(100, 2), z = runif(100))
pal = colorBin('PuOr', df$z, bins = c(0, .1, .4, .9, 1))
leaflet(df) %>%
addCircleMarkers(~x, ~y, color = ~pal(z)) %>%
addLegend(pal = pal, values = ~z)
leaflet(df) %>%
addCircleMarkers(~x, ~y, color = ~pal(z)) %>%
addLegend(pal = pal, values = ~z, labFormat = labelFormat(
prefix = '(', suffix = ')%', between = ', ',
transform = function(x) 100 * x
))
palette_fonctions()
palette_fonctions(6)
palette_fonctions()$levels
palette_fonctions$levels
palette_fonctions(6)$levels
grr <- palette()
test <- c('ba','bi','bo','bu','be','bun')
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, labels=test(),values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=OH_ponctuels_4326@data$V_URB_NOM)
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, labels=test,values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=OH_ponctuels_4326@data$V_URB_NOM)
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, labels=grr,values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=OH_ponctuels_4326@data$V_URB_NOM)
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, labels=grr(),values = OH_ponctuels_4326@data$V_URB,
opacity = 1, labels=OH_ponctuels_4326@data$V_URB_NOM)
leaflet() %>%
## OH de base :
addPolygons(data=OH_geom_pg_4326,
stroke = TRUE,
weight=1,
opacity=0.7,
color=~palette_fonctions(OH_geom_pg_4326@data$V_URB),
group="géometries",
popup=popup_pg_tout) %>%
addLegend(position="bottomlef", title = "Valeurs urbaines des OH", pal = palette_fonctions, labels=grr(),values = OH_ponctuels_4326@data$V_URB,
opacity = 1)
unique(OH_ponctuels_4326$V_URB_NOM)
levels(OH_ponctuels_4326@data$V_URB_NOM)
################################
# Shiny app pour afficher les objets selon le temps
# mars 2017
# chargement des données pour explOH_5
################################
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
#####
## Import données
## 1. Données contexte
#Import > shapefile
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
# View(ens_urb_total)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
traits_rive$DEBUT <- as.integer(traits_rive$DEBUT)
traits_rive$FIN <- as.integer(traits_rive$FIN)
## 2. Objets historiques
## PBM d'encoding (source et dest en UTF8 mais dans la connection DB est transformé :/) >> pour le moment réencodage ligne à ligne == dégueu
## import géométries complètes et tout en points
#--------- depuis shapes (exportés ci-dessous) pour aller + vite ----
## Attention pour le moment shape avec v_usage 11 et v_usage >70, date_deb < 0
# OH_geom_pg <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pg", stringsAsFactors = FALSE)
# OH_geom_pl <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pl", stringsAsFactors = FALSE)
# OH_geom_pt <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pt", stringsAsFactors = FALSE)
#----
#-------- Depuis sqlite----
#---- connexions ----
db_geom <- dbConnect(SQLite(), "data/OH_3geom.sqlite")
OH <- dbGetQuery(db_geom, "select * from OH where V_USAGE != 11 and V_USAGE < 70 and APPARITION >= -25")
OH_geom_pt_source <- dbGetQuery(db_geom, "select * from OH_pt_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pl_source <- dbGetQuery(db_geom, "select * from OH_pl_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pg_source <- dbGetQuery(db_geom, "select * from OH_pg_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_ponctuels_source <- dbGetQuery(db_geom, "select * from OH_ponctuels where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
#---- conversion des tables en spatial data frame ----
# AVEC GEOMETRIE
##POINTS
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
rm(tab_pt,liste_pt)
##POLYGONES
liste_pg <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pg_source$geom_wkt, row.names(OH_geom_pg_source))
#end.time <- Sys.time()
# pbm de noms d'objets trop long - l'ensemble de la description des polygones
names(liste_pg) <- c(1:length(liste_pg))
tab_pg <- do.call(rbind,liste_pg)
OH_geom_pg <- SpatialPolygonsDataFrame(tab_pg, OH_geom_pg_source[,c(1:11, 15)])
rm(tab_pg,liste_pg)
##LIGNES
liste_pl <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pl_source$geom_wkt, row.names(OH_geom_pl_source))
tab_pl <- do.call(rbind,liste_pl)
OH_geom_pl <- SpatialLinesDataFrame(tab_pl, OH_geom_pl_source[,c(1:11, 15)])
rm(tab_pl,liste_pl)
#TOUT EN PONCTUEL
liste_ponctuels <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_ponctuels_source$geom_wkt, row.names(OH_ponctuels_source))
tab_ponctuels <- do.call(rbind,liste_ponctuels)
OH_ponctuels <- SpatialPointsDataFrame(tab_ponctuels, OH_ponctuels_source[,1:11],proj4string=proj_2154)
rm(tab_ponctuels,liste_ponctuels)
#---- Préparation finale des tables : projection, encodage, ajout des v_urb (à faire dans sqlite ?) ----
#en reprojetant pour leaflet
OH_geom_pg_4326 <- spTransform(OH_geom_pg,CRS(proj_4326))
OH_geom_pl_4326 <- spTransform(OH_geom_pl,CRS(proj_4326))
OH_geom_pt_4326 <- spTransform(OH_geom_pt,CRS(proj_4326))
OH_ponctuels_4326 <- spTransform(OH_ponctuels,CRS(proj_4326))
#encodage (au moins faire un apply !)
OH_geom_pg_4326@data$NOM <- iconv(OH_geom_pg_4326@data$NOM, "UTF-8")
OH_geom_pg_4326@data$NOM_USAGE <- iconv(OH_geom_pg_4326@data$NOM_USAGE, "UTF-8")
OH_geom_pl_4326@data$NOM <- iconv(OH_geom_pl_4326@data$NOM, "UTF-8")
OH_geom_pl_4326@data$NOM_USAGE <- iconv(OH_geom_pl_4326@data$NOM_USAGE, "UTF-8")
OH_geom_pt_4326@data$NOM <- iconv(OH_geom_pt_4326@data$NOM, "UTF-8")
OH_geom_pt_4326@data$NOM_USAGE <- iconv(OH_geom_pt_4326@data$NOM_USAGE, "UTF-8")
OH_ponctuels_4326@data$NOM <- iconv(OH_ponctuels_4326@data$NOM, "UTF-8")
OH_ponctuels_4326@data$NOM_USAGE <- iconv(OH_ponctuels_4326@data$NOM_USAGE, "UTF-8")
ens_urb@data$descriptio <- iconv(ens_urb@data$descriptio, "UTF-8")
#ajout d'une colonne valeur urb = V_URB =>> MAPPLY ?
OH_geom_pg_4326$V_URB <- cut (OH_geom_pg_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom_pt_4326$V_URB <- cut (OH_geom_pt_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom_pl_4326$V_URB <- cut (OH_geom_pl_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels_4326$V_URB <- cut (OH_ponctuels_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
#ajout d'une colonne nom valeur urb = V_URB_NOM
OH_geom_pg_4326$V_URB_NOM <- cut (OH_geom_pg_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom_pt_4326$V_URB_NOM <- cut (OH_geom_pt_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom_pl_4326$V_URB_NOM <- cut (OH_geom_pl_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels_4326$V_URB_NOM <- cut (OH_ponctuels_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
#recodage de la plus petite date = -25
OH_geom_pt_4326@data$DATE_DEB[OH_geom_pt_4326@data$DATE_DEB < -25] <- -25
OH_geom_pg_4326@data$DATE_DEB[OH_geom_pg_4326@data$DATE_DEB < -25] <- -25
OH_geom_pl_4326@data$DATE_DEB[OH_geom_pl_4326@data$DATE_DEB < -25] <- -25
OH_ponctuels_4326@data$DATE_DEB[OH_ponctuels_4326@data$DATE_DEB < -25] <- -25
levels(OH_ponctuels_4326@data$V_URB_NOM)
runApp()
shiny::runApp()
install.packages("sf")
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(RSQLite)
library(rgdal)
library(rgeos)
library(sf)
points <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pt_uniques")
lignes <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pl_uniques")
polygones <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pg_uniques")
OH_geom_base <- rbind(points,lignes,polygones)
OH_geom <- OH_geom_base[OH_geom_base$V_USAGE != 11
& OH_geom_base$V_USAGE < 70
& OH_geom_base$DATE_FIN > -25,]
OH_geom <- spTransform(OH_geom,CRS(proj_4326))
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
OH_geom <- spTransform(OH_geom,CRS(proj_4326))
OH_geom <- st_transform(OH_geom,CRS(proj_4326))
OH_geom <- st_transform(OH_geom,proj_4326)
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
#####
## Import données
## 1. Données contexte
#Import > shapefile
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb@data$descriptio <- iconv(ens_urb@data$descriptio, "UTF-8")
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
# View(ens_urb_total)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
traits_rive$DEBUT <- as.integer(traits_rive$DEBUT)
traits_rive$FIN <- as.integer(traits_rive$FIN)
## 2. Objets historiques
#geometries riches
points <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pt_uniques")
lignes <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pl_uniques")
polygones <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pg_uniques")
##parse warning = ID des OH transformées
OH_geom_base <- rbind(points,lignes,polygones)
OH_geom <- OH_geom_base[OH_geom_base$V_USAGE != 11
& OH_geom_base$V_USAGE < 70
& OH_geom_base$DATE_FIN > -25,]
#OH_ponctuels
OH_ponctuels <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_ponctuels")
#reprojetction pour leaflet
OH_geom <- st_transform(OH_geom,proj_4326)
OH_ponctuels <- st_transform(OH_ponctuels,sproj_4326)
OH_ponctuels <- st_transform(OH_ponctuels,proj_4326)
source('C:/Users/lue/Sync/1recherche/1these/SIG/VISU/shiny/explOH_7/charge_data.R', encoding = 'UTF-8', echo=TRUE)
OH_geom$V_URB_NOM <- cut (OH_geom$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("1.voirie, aménagement",
"2.structures défensives et militaires",
"3.constructions civiles",
"4.édifices religieux",
"5.lieux d'inhumation",
"6.lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
source('C:/Users/lue/Sync/1recherche/1these/SIG/VISU/shiny/explOH_7/charge_data.R', encoding = 'UTF-8', echo=TRUE)
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb@data$descriptio <- iconv(ens_urb@data$descriptio, "UTF-8")
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
traits_rive$DEBUT <- as.integer(traits_rive$DEBUT)
traits_rive$FIN <- as.integer(traits_rive$FIN)
points <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pt_uniques")
lignes <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pl_uniques")
polygones <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_pg_uniques")
OH_geom_base <- rbind(points,lignes,polygones)
OH_geom <- OH_geom_base[OH_geom_base$V_USAGE != 11
& OH_geom_base$V_USAGE < 70
& OH_geom_base$DATE_FIN > -25,]
OH_ponctuels <- st_read(dsn="C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite", layer="oh_ponctuels")
OH_geom <- st_transform(OH_geom,proj_4326)
OH_ponctuels <- st_transform(OH_ponctuels,proj_4326)
OH_geom$V_URB <- cut (OH_geom$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels$V_URB <- cut (OH_ponctuels_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels$V_URB <- cut (OH_ponctuels$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom$V_URB_NOM <- cut (OH_geom$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("1.voirie, aménagement",
"2.structures défensives et militaires",
"3.constructions civiles",
"4.édifices religieux",
"5.lieux d'inhumation",
"6.lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels$V_URB_NOM <- cut (OH_ponctuels$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("1.voirie, aménagement",
"2.structures défensives et militaires",
"3.constructions civiles",
"4.édifices religieux",
"5.lieux d'inhumation",
"6.lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom@data$DATE_DEB[OH_geom@data$DATE_DEB < -25] <- -25
OH_geom$DATE_DEB[OH_geom@data$DATE_DEB < -25] <- -25
OH_geom$DATE_DEB[OH_geom$DATE_DEB < -25] <- -25
OH_ponctuels$DATE_DEB[OH_ponctuels$DATE_DEB < -25] <- -25
runApp()
