library(shinyjs)
#SQl to R
library(RSQLite)
library(rgdal)
library(rgeos)
ens_urb_total <- readOGR(dsn="./data/shapes/", layer="ens_urb_v2", stringsAsFactors = FALSE)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
ens_urb_sub <- subset(ens_urb_total, utilise == "true")
ens_urb <- spTransform(ens_urb_sub, CRS(proj_p4s))
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
ens_urb <- spTransform(ens_urb_sub, CRS(proj_p4s))
ens_urb <- spTransform(ens_urb_sub, CRS(proj_2154))
shiny::runApp()
shiny::runApp()
View(ens_urb_total)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
View(ens_urb_total)
shiny::runApp()
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
ens_urb_sub <- subset(ens_urb_total, utilise == "true")
View(ens_urb_sub)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
View(ens_urb_total)
ens_urb_sub <- subset(ens_urb_total, utilise == "true")
ens_urb_sub <- subset(ens_urb_total, UTILISE == "true")
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
View(traits_rive_total)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
View(traits_rive_total)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive <- iconv(traits_rive, "UTF-8")
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
View(traits_rive)
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
View(traits_rive)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
View(traits_rive)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(mapview)
install.packages("mapview")
library(mapview)
m <- mapview(breweries91) # uses addCirclemarkers so circle radius changes with zoom
m@map %>%
addCircles(data = breweries91, color = "red", radius = 100)
m
m@map %>%
addCircles(data = breweries91, color = "red", radius = 300)
shiny::runApp()
shiny::runApp()
shiny::runApp()
################################
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
palette
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
display.brewer.all(6,"Set1")
display.brewer.pal(6,"Set1")
c_palette <- c("#E03535","#2C39E8","#29FF81","#E8D145","#FF9D4D","#3CE3E8")
library(colorspace)
choose_palette()
barplot(seq(1:6), col=c_palette))
barplot(seq(1:6), col=c_palette)
a_palette <- c("#e72535", "#0a8eb1", "#f6b01a", "#2fc6a0", "#703ab9","#ff7919")
barplot(seq(1:6), col=a_palette)
source('~/.active-rstudio-document')
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal(a_palette)
display_any_pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
display_any_pal(a_palette)
rainbow6equal = c("#BF4D4D", "#BFBF4D", "#4DBF4D", "#4DBFBF", "#4D4DBF", "#BF4DBF")
display_any_pal(rainbow6equal)
rich6equal = c("#000043", "#0033FF", "#01CCA4", "#BAFF12", "#FFCC00", "#FF3300")
display_any_pal(rich6equal)
tim6equal = c("#00008F", "#005AFF", "#23FFDC", "#ECFF13", "#FF4A00", "#800000")
display_any_pal(tim6equal)
tim6equal = c("#00008F", "#005AFF", "#23FFDC", "#ECFF13", "#FF4A00", "#800000")
dark6equal = c("#1B9E77", "#66A61E", "#7570B3", "#D95F02", "#E6AB02", "#E7298A")
display_any_pal(dark6equal)
set6equal = c("#66C2A5", "#8DA0CB", "#A6D854", "#E78AC3", "#FC8D62", "#FFD92F")
display_any_pal(set6equal)
tol6qualitative=c("#332288", "#88CCEE", "#117733", "#DDCC77", "#CC6677","#AA4499")
display_any_pal(tol6qualitative)
install.packages("devtools")
library("devtools")
install_github("ndphillips/yarrr")
install.packages("yarrr")
b_palette <- c("#e72535", "#0a8eb1", "#f6b01a", "#2fc6a0", "#703ab9","#117733")
display_any_pal(b_palette)
b_palette <- c("#ea3c4b", "#d8a54e", "#966dbc", "#29c69f", "#249ab5","#2e9651")
display_any_pal(b_palette)
shiny::runApp()
runApp()
db_geom <- dbConnect(SQLite(), "data/OH_3geom.sqlite")
OH <- dbGetQuery(db_geom, "select * from OH where V_USAGE != 11 and V_USAGE < 70 and APPARITION >= -25")
OH_geom_pt_source <- dbGetQuery(db_geom, "select * from OH_pt_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pl_source <- dbGetQuery(db_geom, "select * from OH_pl_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pg_source <- dbGetQuery(db_geom, "select * from OH_pg_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
db_ponctuels <- dbConnect(SQLite(), "data/OH_points.sqlite")
OH_ponctuels_source <- dbGetQuery(db_ponctuels, "select * from OH_points where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,1:11],proj4string=proj_2154)
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
library(RSQLite)
library(rgdal)
library(rgeos)
source("charge_data.R", local=TRUE)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ens_urb_v2", stringsAsFactors = FALSE)
ens_urb <- spTransform(subset(ens_urb_total, UTILISE == "true"), CRS(proj_4326))
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
db_geom <- dbConnect(SQLite(), "data/OH_3geom.sqlite")
OH <- dbGetQuery(db_geom, "select * from OH where V_USAGE != 11 and V_USAGE < 70 and APPARITION >= -25")
OH_geom_pt_source <- dbGetQuery(db_geom, "select * from OH_pt_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pl_source <- dbGetQuery(db_geom, "select * from OH_pl_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pg_source <- dbGetQuery(db_geom, "select * from OH_pg_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
db_ponctuels <- dbConnect(SQLite(), "data/OH_points.sqlite")
OH_ponctuels_source <- dbGetQuery(db_ponctuels, "select * from OH_points where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,1:11],proj4string=proj_2154)
rm(tab_pt,liste_pt)
names(liste_pg) <- c(1:length(liste_pg))
liste_pg <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pg_source$geom_wkt, row.names(OH_geom_pg_source))
names(liste_pg) <- c(1:length(liste_pg))
tab_pg <- do.call(rbind,liste_pg)
OH_geom_pg <- SpatialPolygonsDataFrame(tab_pg, OH_geom_pg_source[,1:11])
rm(tab_pg,liste_pg)
liste_pl <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pl_source$geom_wkt, row.names(OH_geom_pl_source))
tab_pl <- do.call(rbind,liste_pl)
OH_geom_pl <- SpatialLinesDataFrame(tab_pl, OH_geom_pl_source[,1:11])
rm(tab_pl,liste_pl)
liste_ponctuels <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_ponctuels_source$geom_wkt, row.names(OH_ponctuels_source))
tab_ponctuels <- do.call(rbind,liste_ponctuels)
OH_ponctuels <- SpatialPointsDataFrame(tab_ponctuels, OH_ponctuels_source[,1:11],proj4string=proj_2154)
rm(tab_ponctuels,liste_ponctuels)
OH_geom_pg_4326 <- spTransform(OH_geom_pg,CRS(proj_4326))
OH_geom_pl_4326 <- spTransform(OH_geom_pl,CRS(proj_4326))
OH_geom_pt_4326 <- spTransform(OH_geom_pt,CRS(proj_4326))
OH_ponctuels_4326 <- spTransform(OH_ponctuels,CRS(proj_4326))
OH_geom_pg_4326@data$NOM <- iconv(OH_geom_pg_4326@data$NOM, "UTF-8")
OH_geom_pg_4326@data$NOM_USAGE <- iconv(OH_geom_pg_4326@data$NOM_USAGE, "UTF-8")
OH_geom_pl_4326@data$NOM <- iconv(OH_geom_pl_4326@data$NOM, "UTF-8")
OH_geom_pl_4326@data$NOM_USAGE <- iconv(OH_geom_pl_4326@data$NOM_USAGE, "UTF-8")
OH_geom_pt_4326@data$NOM <- iconv(OH_geom_pt_4326@data$NOM, "UTF-8")
OH_geom_pt_4326@data$NOM_USAGE <- iconv(OH_geom_pt_4326@data$NOM_USAGE, "UTF-8")
OH_ponctuels_4326@data$NOM <- iconv(OH_ponctuels_4326@data$NOM, "UTF-8")
OH_ponctuels_4326@data$NOM_USAGE <- iconv(OH_ponctuels_4326@data$NOM_USAGE, "UTF-8")
OH_geom_pg_4326$V_URB <- cut (OH_geom_pg_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom_pt_4326$V_URB <- cut (OH_geom_pt_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom_pl_4326$V_URB <- cut (OH_geom_pl_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels_4326$V_URB <- cut (OH_ponctuels_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c(1,2,3,4,5,6),
right=FALSE,
include.lowest = TRUE)
OH_geom_pg_4326$V_URB_NOM <- cut (OH_geom_pg_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom_pt_4326$V_URB_NOM <- cut (OH_geom_pt_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom_pl_4326$V_URB_NOM <- cut (OH_geom_pl_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_ponctuels_4326$V_URB_NOM <- cut (OH_ponctuels_4326$V_USAGE,
breaks=c(0,20,30,40,50,60,70),
labels=c("voirie, aménagement",
"structures défensives et militaires",
"constructions civiles",
"édifices religieux",
"lieux d'inhumation",
"lieux de commerce, artisanat, production"),
right=FALSE,
include.lowest = TRUE)
OH_geom_pt_4326@data$DATE_DEB[OH_geom_pt_4326@data$DATE_DEB < -25] <- -25
OH_geom_pg_4326@data$DATE_DEB[OH_geom_pg_4326@data$DATE_DEB < -25] <- -25
OH_geom_pl_4326@data$DATE_DEB[OH_geom_pl_4326@data$DATE_DEB < -25] <- -25
OH_ponctuels_4326@data$DATE_DEB[OH_ponctuels_4326@data$DATE_DEB < -25] <- -25
runApp()
shiny::runApp()
runApp()
View(traits_rive_total@data)
View(traits_rive@data)
ggplot(traits_rive)
ggplot(traits_rive@data)
runApp()
library(ggplotly)
View(subset(traits_rive, DEBUT<=0 & FIN>=200))
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
eval(2 ^ 2 ^ 3)
test="blblab"
eval(test="yes")
eval(test)
runApp()
lapply(X=2:6, paste(input$choix_fonctions[,X,])
)
[2:6]
2:6
paste("input$choix_fonctions[",2:6,"]")
usage_range <- c(
lapply(paste("input$choix_fonctions[",2:6,"]"), function(x), eval(parse(text=x))
))
usage_range <- c(
lapply(paste("input$choix_fonctions[",2:6,"]"), function(x) eval(parse(text=x))
))
usage_range <- c(
lapply(paste("input$choix_fonctions[",2:6,"]"), function(x) eval(x))
))
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval(X))
))
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval())
))
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval()
))
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval(x)
))
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval(x)
))
lapply(X=paste("input$choix_fonctions[",2:6,"]"), function(x) eval(x)
)
usage_range <- c(
lapply(X=paste("input$choix_fonctions[",2:6,"]", sep("")), function(x) eval(x)
))
lapply(X=paste("input$choix_fonctions[",2:6,"]", sep=""), function(x) eval(x)
)
lapply(X=paste("input$choix_fonctions[",2:6,"]", sep=""), function(x) eval(parse(text=x))
)
lapply(X=paste("input$choix_fonctions[",2:6,"]", sep=""), function(x) eval(parse(x)))
runApp()
shiny::runApp()
install.packages(tidyr)
install.packages("tidyr")
runApp()
install.packages("shinyjs")
runApp()
runApp()
install.packages(c("ade4", "assertthat", "BH", "colorspace", "DBI", "digest", "dplyr", "ggplot2", "ggrepel", "ggthemes", "htmlwidgets", "jsonlite", "leaflet", "mime", "R6", "Rcpp", "reshape2", "rgdal", "rgeos", "RSQLite", "scales", "shiny", "shinythemes", "sp", "stringi", "stringr", "yaml"))
install.packages(c("ade4", "assertthat", "BH", "colorspace",
install.packages(c("ade4", "assertthat", "BH", "colorspace", "DBI", "digest", "dplyr", "ggplot2", "ggrepel", "ggthemes", "htmlwidgets", "jsonlite", "leaflet", "mime", "R6", "Rcpp", "reshape2", "rgdal", "rgeos", "RSQLite", "scales", "shiny", "shinythemes", "sp", "stringi", "stringr", "yaml"))
install.packages(c("ade4", "assertthat", "BH", "colorspace",
install.packages("shinyjs")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp()
lenght(OH_ponctuels)
length(OH_ponctuels)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
#SQl to R
library(RSQLite)
library(rgdal)
library(rgeos)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
runApp()
shiny::runApp()
runApp()
vars_suppr <- c("QGIS_ID", "geometry", "geom_wkt")
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-var_suppr],proj4string=proj_2154)
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-var_suppr],proj4string=proj_2154)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,-vars_suppr],proj4string=proj_2154)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(-12-13)],proj4string=proj_2154)
View(head(OH_geom_pg))
View(head(OH_geom_pt))
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 14)],proj4string=proj_2154)
View(head(OH_geom_pt))
View(head(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
View(head(OH_geom_pt))
View(head(OH_geom_pg))
head(OH_geom_pg)
head(OH_geom_pg@data)
head(OH_geom_pt@data)
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
rm(tab_pt,liste_pt)
liste_pg <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pg_source$geom_wkt, row.names(OH_geom_pg_source))
names(liste_pg) <- c(1:length(liste_pg))
tab_pg <- do.call(rbind,liste_pg)
OH_geom_pg <- SpatialPolygonsDataFrame(tab_pg, OH_geom_pg_source[,c(1:11, 15)])
rm(tab_pg,liste_pg)
liste_pl <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pl_source$geom_wkt, row.names(OH_geom_pl_source))
tab_pl <- do.call(rbind,liste_pl)
OH_geom_pl <- SpatialLinesDataFrame(tab_pl, OH_geom_pl_source[,c(1:11, 15)])
rm(tab_pl,liste_pl)
liste_ponctuels <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_ponctuels_source$geom_wkt, row.names(OH_ponctuels_source))
tab_ponctuels <- do.call(rbind,liste_ponctuels)
OH_ponctuels <- SpatialPointsDataFrame(tab_ponctuels, OH_ponctuels_source[,1:12],proj4string=proj_2154)
rm(tab_ponctuels,liste_ponctuels)
head(OH_ponctuels@data)
head(OH_ponctuels_source@data)
head(OH_ponctuels_source)
head(OH_geom_pg@data)
runApp()
shiny::runApp()
runApp()
library(shiny)
runApp()
#librairies generales
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
#SQl to R
library(RSQLite)
library(rgdal)
library(rgeos)
source("charge_data.R", local=TRUE)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
ens_urb <- spTransform(ens_urb_total, CRS(proj_4326))
ens_urb$date_debut <- as.numeric(ens_urb$date_debut)
ens_urb$date_fin <- as.numeric(ens_urb$date_fin)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine
# View(ens_urb_total)
traits_rive_total <- readOGR(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE)
traits_rive <- spTransform(traits_rive_total, CRS(proj_4326))
traits_rive$SELEC <- iconv(traits_rive$SELEC, "UTF-8")
traits_rive$FIAB <- iconv(traits_rive$FIAB, "UTF-8")
traits_rive$DEBUT <- as.integer(traits_rive$DEBUT)
traits_rive$FIN <- as.integer(traits_rive$FIN)
## 2. Objets historiques
## PBM d'encoding (source et dest en UTF8 mais dans la connection DB est transformé :/) >> pour le moment réencodage ligne à ligne == dégueu
## import géométries complètes et tout en points
#--------- depuis shapes (exportés ci-dessous) pour aller + vite ----
## Attention pour le moment shape avec v_usage 11 et v_usage >70, date_deb < 0
# OH_geom_pg <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pg", stringsAsFactors = FALSE)
# OH_geom_pl <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pl", stringsAsFactors = FALSE)
# OH_geom_pt <- readOGR(dsn="./data/OH_geom", layer="OH_geom_pt", stringsAsFactors = FALSE)
#----
#-------- Depuis sqlite----
#---- connexions ----
db_geom <- dbConnect(SQLite(), "data/OH_3geom_portees.sqlite")
OH <- dbGetQuery(db_geom, "select * from OH where V_USAGE != 11 and V_USAGE < 70 and APPARITION >= -25")
OH_geom_pt_source <- dbGetQuery(db_geom, "select * from OH_pt_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pl_source <- dbGetQuery(db_geom, "select * from OH_pl_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_geom_pg_source <- dbGetQuery(db_geom, "select * from OH_pg_uniques where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
OH_ponctuels_source <- dbGetQuery(db_geom, "select * from OH_ponctuels where V_USAGE != 11 and V_USAGE < 70 and DATE_FIN >= -25")
#---- conversion des tables en spatial data frame ----
# AVEC GEOMETRIE
##POINTS
liste_pt <- mapply(function(geom, id){readWKT(text=geom, id=id, p4s=proj_2154)}, OH_geom_pt_source$geom_wkt, row.names(OH_geom_pt_source))
tab_pt <- do.call(rbind,liste_pt)
OH_geom_pt <- SpatialPointsDataFrame(tab_pt, OH_geom_pt_source[,c(1:11, 15)],proj4string=proj_2154)
rm(tab_pt,liste_pt)
##POLYGONES
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
install.packages(c("markdown", "memoise", "rgdal", "tidyr"))
install.packages(c("markdown", "memoise", "rgdal", "tidyr"))
EPSG = make_EPSG()
library(shiny)
library(leaflet)
library(dplyr)
library(tidyr)
library(shinythemes)
library(reshape2)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(shinyjs)
library(RSQLite)
library(rgdal)
library(rgeos)
runApp()
shiny::runApp()
runApp()
palette <- brewer.pal(6,"Set1"
palette <- brewer.pal(6,"Set1")
runApp()
ens_urb_total <- readOGR(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE)
shiny::runApp()
