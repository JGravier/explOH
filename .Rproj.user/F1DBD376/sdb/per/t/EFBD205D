{
    "collab_server" : "",
    "contents" : "################################\n# Shiny app pour afficher les objets selon le temps \n# juin 2017\n# chargement des données pour explOH_7\n################################\n\n\nEPSG = make_EPSG()\nproj_2154 = EPSG[which(EPSG$code == 2154), \"prj4\"]\nproj_4326 = EPSG[which(EPSG$code == 4326), \"prj4\"]\n\n\n#----------------------------------- 1. Données contextuelles ----\n\n#Import > shapefile\nens_urb_total <- st_read(dsn=\"./data/shapes\", layer=\"ensembles_urbains\", stringsAsFactors = FALSE, quiet = TRUE)\nens_urb <- st_transform(ens_urb_total, proj_4326)\nens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine ? pas nécessairement choix conceptuel fort à ne trancher que au moment de l'utilisation\n# View(ens_urb_total)\ntraits_rive_total <- st_read(dsn=\"./data/shapes\", layer=\"traits_rive_2154\", stringsAsFactors = FALSE)\ntraits_rive <- st_transform(traits_rive_total, proj_4326)\n\n\n#-----------------------------------  2. Objets historiques ----\n\n#geometries riches\npoints <- st_read(dsn=\"./data/OH_3geom.sqlite\", layer=\"oh_pt_uniques\", quiet=TRUE)\nlignes <- st_read(dsn=\"./data/OH_3geom.sqlite\", layer=\"oh_pl_uniques\", quiet=TRUE)\npolygones <- st_read(dsn=\"./data/OH_3geom.sqlite\", layer=\"oh_pg_uniques\", quiet=TRUE)\nOH_geom_base <- rbind(points,lignes,polygones)\nOH_geom <- OH_geom_base[OH_geom_base$V_USAGE != 11\n                        & OH_geom_base$V_USAGE < 70\n                        & OH_geom_base$DATE_FIN > -25,]\n\n#OH_ponctuels\n# OH_ponctuels <- st_read(dsn=\"C:/Users/lue/Sync/1recherche/1these/SIG/BDD/ToToPi_GDB/ToToPI_V2/OH_3geom.sqlite\", layer=\"oh_ponctuels\", quiet=TRUE)\n\n#reprojection pour leaflet\nOH_geom <- st_transform(OH_geom,proj_4326)\n# OH_ponctuels <- st_transform(OH_ponctuels,proj_4326)\n\n\n#ajout d'une colonne valeur urb = V_URB =>> MAPPLY ?\nOH_geom$V_URB <- cut (OH_geom$V_USAGE,\n                              breaks=c(0,20,30,40,50,60,70),\n                              labels=c(1,2,3,4,5,6),\n                              right=FALSE,\n                              include.lowest = TRUE)\n\n# OH_ponctuels$V_URB <- cut (OH_ponctuels$V_USAGE,\n#                                 breaks=c(0,20,30,40,50,60,70),\n#                                 labels=c(1,2,3,4,5,6),\n#                                 right=FALSE,\n#                                 include.lowest = TRUE)\n\n\n#ajout d'une colonne nom valeur urb = V_URB_NOM\nOH_geom$V_URB_NOM <- cut (OH_geom$V_USAGE,\n                          breaks=c(0,20,30,40,50,60,70),\n                          labels=c(\"1.voirie, aménagement\",\n                                   \"2.structures défensives et militaires\",\n                                   \"3.constructions civiles\",\n                                   \"4.édifices religieux\",\n                                   \"5.lieux d'inhumation\",\n                                   \"6.lieux de commerce, artisanat, production\"),\n                          right=FALSE,\n                          include.lowest = TRUE)\n\n# OH_ponctuels$V_URB_NOM <- cut (OH_ponctuels$V_USAGE,\n#                                breaks=c(0,20,30,40,50,60,70),\n#                                labels=c(\"1.voirie, aménagement\",\n#                                         \"2.structures défensives et militaires\",\n#                                         \"3.constructions civiles\",\n#                                         \"4.édifices religieux\",\n#                                         \"5.lieux d'inhumation\",\n#                                         \"6.lieux de commerce, artisanat, production\"),\n#                                right=FALSE,\n#                                include.lowest = TRUE)\n\n#recodage de la plus petite date = -25\nOH_geom$DATE_DEB[OH_geom$DATE_DEB < -25] <- -25\n# OH_ponctuels$DATE_DEB[OH_ponctuels$DATE_DEB < -25] <- -25\n\n#----------------------------------- 3. Listes vurb et vusage ----\nEF <- st_read(dsn=\"./data/OH_3geom.sqlite\", layer=\"EF\", quiet=TRUE)\n\nsub_vurb <- EF[EF$Code_EF %in% seq(10,60,10), c(\"V_urbaine\", \"Code_EF\")]\nliste_vurb <- paste( substring(sub_vurb$Code_EF,1,1), # vurb en 1,2,3\n  \".\", stri_trans_totitle(sub_vurb$V_urbaine, opts_brkiter = stri_opts_brkiter(type = \"sentence\")), #nom vurb avec capitale\n  sep=\"\")\nliste_vurb <- liste_vurb[order(liste_vurb)]\n\nsub_vusage <- EF[EF$Code_EF %in% unique(OH_geom$V_USAGE), c(\"Code_EF\", \"V_usage\")]#pour le moment car nom_usages pas bon pour 41 et 43 (?)\nliste_vusage <- paste(sub_vusage$Code_EF,\n                    \".\", \n                   stri_trans_totitle(sub_vusage$V_usage, opts_brkiter = stri_opts_brkiter(type = \"sentence\")), #nom vurb avec capitale\n                    sep=\"\")\nliste_vusage <- liste_vusage[order(liste_vusage)] \n\n",
    "created" : 1503047548539.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "218430856",
    "id" : "EFBD205D",
    "lastKnownWriteTime" : 1504105882,
    "last_content_update" : 1504105882155,
    "path" : "C:/Users/lue/Sync/1recherche/1these/SIG/VISU/shiny/explOH_8/charge_data.R",
    "project_path" : "charge_data.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}