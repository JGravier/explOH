{
    "collab_server" : "",
    "contents" : "################################\n# Shiny app pour afficher les objets selon le temps\n# septembre 2017\n# UI pour explOH_9\n################################\nlibrary(shiny)\nlibrary(leaflet)\n\n\n#define UI\nshinyUI(fluidPage(\n  tags$head(tags$link(rel=\"icon\", type=\"image/png\", href=\"favicon.png\"), \n            tags$link(rel=\"stylesheet\", type=\"text/css\", href=\"https://fonts.googleapis.com/css?family=Roboto\"), \n            tags$link(rel=\"stylesheet\", type=\"text/css\", href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700\"), \n            tags$title(\"explOH\"),  \n            #includeScript(\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"),\n            includeScript(\"www/anim.js\"),\n            includeCSS(\"www/style.css\")\n            #attention pas d'accent dans le css > erreur utf\n  ),\n  \n  \n  useShinyjs(),\n  \n  #titre\n  h1(\"explOH\"),\n  h4(\"Plateforme d'exploration des Objets Historiques de la ville de Tours (base ToToPI)\"),\n  img(id=\"bouton_info\", src='info.png'),\n  \n  tags$div(id=\"information_panel\",\n           fluidRow( \n             column(6, source.info),\n             column (6, source.usage)),\n           fluidRow(img(id=\"bouton_fermer\", src='fermer.png'))\n  ),\n  \n  fluidRow(\n    \n    column (id=\"temps_play\", 12,\n            wellPanel( # slide temps\n              sliderInput(\"limites\", label=\"\",\n                          min=-25, max=2015, value=c(-25, -25), round = 1, step=10, sep=\" \",\n                          animate = animationOptions(interval=150)),\n              tags$div(id=\"explorer\", \"explorer\"))),\n  \n  column (class=\"menu_gauche\", 2,\n          wellPanel( id=\"menu_temps\",\n                     # h3(\"Sélection temporelle\"), \n                     # br(),\n                     # text temps\n                     splitLayout(\n                       textInput(\"borne_temps_1\", label =\"Année min\", value = NULL),\n                       textInput(\"borne_temps_2\", label=\"Année max\", value = NULL)\n                     ),\n                     actionButton(\"selec_bornes_temps\", label=\"Appliquer les bornes\")\n          )\n  )\n  \n  # , \n  # playButton = HTML(\"<img src=\\\"play.svg\\\" >\"),\n  # pauseButton = HTML(\"<img src=\\\"pause.svg\\\" >\")\n),\n\n#panneau gauche\nfluidRow(\n  \n  column(class=\"menu_gauche\", 3,\n         \n         wellPanel(id=\"menu_OH\",\n                   h3(\"Identification des OH\"),\n                   textInput(\"test\", label=NULL, value = NULL),\n                   #trouver OF\n                   searchInput(\"selec_OH\", \n                               label=NULL,\n                               placeholder= \"Entrer un n° d'OH à trouver\", \n                               btnSearch = icon(\"search\"),\n                               btnReset = icon(\"remove\")),\n                   \n                   \n                   # couleurs selon fonction, portée ou durée d'existance\n                   radioButtons(\"couleur_OH\", label = \"Différencier les OH selon leur :\", \n                                choices = list(\"valeur urbaine\" = \"v_urb\", \n                                               \"portée\" = \"portee\", \n                                               \"durée d'existance\" = \"duree\"), \n                                selected = \"v_urb\",\n                                inline = TRUE),\n                   br(),\n                   \n                   \n                   # fonctions à afficher\n                   lapply(1:6, function(i) {\n                     pickerInput(\n                       inputId = paste(\"picker_vurb\", i, sep=\"_\"),\n                       # label = liste_vurb[i],\n                       choices = liste_vusage[substring(liste_vusage,1,2) < i*10+10 & substring(liste_vusage,1,2) >= i*10],\n                       selected = liste_vusage[substring(liste_vusage,1,2) < i*10+10 & substring(liste_vusage,1,2) >= i*10],\n                       multiple = TRUE,\n                       options = list(\n                         `selected-text-format` = \"count>-1\",\n                         `count-selected-text` = paste(liste_vurb[i],\"({0}/{1} activités)\", sep=\" \"),\n                         `actions-box` = TRUE,\n                         `deselect-all-text` = \"Aucune\",\n                         `select-all-text` = \"Toutes\",\n                         # `none-Selected-Text` =paste(liste_vurb[i],\"(0/{1} activités)\", sep=\" \"),\n                         `live-Search` = TRUE,\n                         style = paste(\"btn-\",i, sep=\"\")\n                       )\n                     )\n                   } )\n                   \n                   \n         )#fin wellPanel2\n         \n         \n  ), #fin menu gauche\n  \n  column(id=\"map_col\", 12,\n         plotOutput(\"plot_timeline\"),\n         #carte\n         leafletOutput(\"map\", height = \"600px\")\n         # br(),\n         # dataTableOutput(\"tableau\")\n         \n         # wellPanel(\n         #   \n         #  h3(\"Exploration graphique\"),\n         #   \n         # #plots\n         # plotOutput(\"ohfreq\", brush = brushOpts(id = \"ohfreq_brush\", direction = \"x\")), \n         # \n         # # ajuster l'échelle y des plots ?\n         # br(),\n         # radioButtons(\"plot_echelle_y\", label = \"Uniformiser les échelles des graphes en ordonnées ?\",\n         #              choices = list(\"Oui\"=\"fixed\",\"Non\"=\"free_y\"),\n         #              selected = \"fixed\",\n         #              inline= TRUE))\n         \n  ),\n  \n  tags$div(source.signature)\n  \n)#fin fluidrow\n\n\n))\n\n",
    "created" : 1504515805202.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3045257404",
    "id" : "6013FDDD",
    "lastKnownWriteTime" : 1509034234,
    "last_content_update" : 1509034234326,
    "path" : "C:/Users/lue/Sync/1recherche/1these/SIG/VISU/shiny/explOH_9/ui.r",
    "project_path" : "ui.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}