################################
# Shiny app pour afficher les objets selon le temps
# mai 2018
# UI pour explOH_11
################################
library(shiny)
library(leaflet)


#define UI
shinyUI(
  
  dashboardPage(
    skin="black",
    
    #titre
    dashboardHeader(
      title=NULL,
      titleWidth = 0),
    
    dashboardSidebar(
      width=150,
      sidebarMenu(
        menuItem("Exploration", tabName="explo_carte", icon = icon("search")),
        menuItem("AFC", tabName="afc", icon=icon("chart-bar")),
        menuItem("Informations", tabName ="info", icon=icon("info"))
      )
    ),
    
    dashboardBody(
      
      tags$head(tags$link(rel="icon", type="image/png", href="favicon.png"),
                tags$link(rel="stylesheet", type="text/css", href="https://fonts.googleapis.com/css?family=Roboto"),
                tags$link(rel="stylesheet", type="text/css", href="https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700"),
                tags$script(src ="https://rawgit.com/rowanwins/leaflet-easyPrint/gh-pages/dist/bundle.js"),
                tags$title("explOH"),
                includeCSS("www/style.css")
                #attention pas d'accent dans le css > erreur utf
      ),
      
      useShinyjs(),
      
      tabItems(
        tabItem(tabName="explo_carte",
                #------------------------------- 1. exploration ------------------
                fluidRow(
                  #curseur années
                  box (
                    id="temps_play",
                    width=9,
                    height = 128,
                    # slide temps
                    sliderInput("limites", label="",
                                min=-25, max=2015, value=c(-25, -25), round = 1, step=10, sep=" ",
                                animate = animationOptions(interval=1500))
                  ),#fin curseur années
                  
                  
                  #bornes temporelles
                  box (
                    id="menu_temps",
                    width=3,
                    splitLayout(
                      textInput("borne_temps_1", label ="Année min", value = NULL),
                      textInput("borne_temps_2", label="Année max", value = NULL)
                    ),
                    actionButton("selec_bornes_temps", label="Appliquer les bornes")
                  )#fin menu bornes temps
                ),#fin fluidRow temps
                
                
                #carte et affichage
                fluidRow(
                  
                  #carte
                  column(
                    id="map_col",
                    width=9,
                    leafletOutput("map", height = "600px")
                  ),#fin carte
                  
                  
                  #affichage
                  box(
                    id="affichage_OH",
                    width=3,
                    title="Affichage des OH",
                    #selection valeurs d'usage
                    tags$span("Affichage des différents types d'activités :"),
                    br(),br(),
                    # fonctions à afficher
                    lapply(1:6, function(i) {
                      pickerInput(
                        inputId = paste("picker_vurb", i, sep="_"),
                        # label = liste_vurb[i],
                        choices = liste_vusage[substring(liste_vusage,1,2) < i*10+10 & substring(liste_vusage,1,2) >= i*10],
                        selected = liste_vusage[substring(liste_vusage,1,2) < i*10+10 & substring(liste_vusage,1,2) >= i*10],
                        multiple = TRUE,
                        options = list(
                          `selected-text-format` = "count>-1",
                          `count-selected-text` = paste(liste_vurb[i],"[{0}/{1}]", sep=" "),
                          `actions-box` = TRUE,
                          `deselect-all-text` = "Aucune",
                          `select-all-text` = "Toutes",
                          # `none-Selected-Text` =paste(liste_vurb[i],"(0/{1} activités)", sep=" "),
                          `live-Search` = TRUE,
                          style = paste("btn-",i, sep="")
                        )
                      )
                    } ),#fin sélection valeurs d'usage
                    br(),
                    # couleurs selon fonction, portée ou durée d'existance
                    tags$span("Différenciation des OH selon leur :"),
                    radioButtons("couleur_OH", label =NULL,
                                 choices = list("activité" = "v_urb", 
                                                "portée" = "portee"), 
                                 selected = "v_urb",
                                 inline = TRUE)
                  ), #fin affichage
                  
                  
                  #identification
                  box(
                    id="id_OH",
                    width=3,
                    title="Identification des OH",
                    #trouver OF
                    searchInput("selec_OH", 
                                label=NULL,
                                placeholder= "Entrer un n° d'OH à trouver", 
                                btnSearch = icon("search"),
                                btnReset = icon("remove"))
                  )#fin identification
                  
                  #téléchargement
                  
                  
                  
                ), #fin fluidrow carte, affichage, identification, téléchargement
                
                fluidRow(
                  
                  box( 
                    id="menu_dl",
                    width=2,
                    title ="Téléchargement des OH",
                    downloadButton("downloadData", label="Télécharger les OH"),
                    selectInput("type_dl", "Type de fichier:", choices = c("geojson", "sqlite","csv"))
                  ),#fin téléchargement
                  
                  #tableau OH
                  box(
                    id="tableau_OH",
                    width=10,
                    collapsible = TRUE,
                    dataTableOutput("tab_OH")
                  )
                )
                
        ),#fin exploration
        
        
        # tags$div(source.signature)
        
      
      #------------------------------ AFC ------------------------
      tabItem(tabName="afc"),
      
      tabItem(tabName="info",
              fluidRow( 
                column(6, source.info),
                column (6, source.usage)
              )
      )
      ) #fin tabItems

    )
    
  )

)


