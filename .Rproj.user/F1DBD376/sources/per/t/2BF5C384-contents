################################
# Shiny app pour afficher les objets selon le temps 
# novembre 2017
# chargement des données pour explOH_7
################################


EPSG = make_EPSG()
proj_2154 = EPSG[which(EPSG$code == 2154), "prj4"]
proj_4326 = EPSG[which(EPSG$code == 4326), "prj4"]


#----------------------------------- 1. Données contextuelles ----

#Import > shapefile
ens_urb_total <- st_read(dsn="./data/shapes", layer="ensembles_urbains", stringsAsFactors = FALSE, quiet = TRUE)
ens_urb <- st_transform(ens_urb_total, proj_4326)
ens_urb$date_fin <- ens_urb$date_fin-1 #dates à modifier dans shapefile d'origine ? pas nécessairement choix conceptuel fort à ne trancher que au moment de l'utilisation
# View(ens_urb_total)
traits_rive_total <- st_read(dsn="./data/shapes", layer="traits_rive_2154", stringsAsFactors = FALSE, quiet = TRUE)
traits_rive <- st_transform(traits_rive_total, proj_4326)
poles_total <- st_read(dsn="./data/shapes", layer="poles", stringsAsFactors = FALSE, quiet = TRUE)
poles <- st_transform(poles_total, proj_4326)

#-----------------------------------  2. Objets historiques ----

#geometries riches
points <- st_read(dsn="./data/OH_3geom.sqlite", layer="oh_pt_uniques", quiet=TRUE)
lignes <- st_read(dsn="./data/OH_3geom.sqlite", layer="oh_pl_uniques", quiet=TRUE)
polygones <- st_read(dsn="./data/OH_3geom.sqlite", layer="oh_pg_uniques", quiet=TRUE)
OH_geom_base <- rbind(points,lignes,polygones)
OH_geom <- OH_geom_base[OH_geom_base$V_USAGE != 11
                        & OH_geom_base$V_USAGE < 70
                        & OH_geom_base$DATE_FIN > -25,]

#reprojection pour leaflet
OH_geom <- st_transform(OH_geom,proj_4326)


#ajout d'une colonne valeur urb = V_URB =>> MAPPLY ?
OH_geom$V_URB <- cut (OH_geom$V_USAGE,
                              breaks=c(0,20,30,40,50,60,70),
                              labels=c(1,2,3,4,5,6),
                              right=FALSE,
                              include.lowest = TRUE)

#ajout d'une colonne nom valeur urb = V_URB_NOM
OH_geom$V_URB_NOM <- cut (OH_geom$V_USAGE,
                          breaks=c(0,20,30,40,50,60,70),
                          labels=c("1.voirie, aménagement",
                                   "2.structures défensives et militaires",
                                   "3.constructions civiles",
                                   "4.édifices religieux",
                                   "5.lieux d'inhumation",
                                   "6.lieux de commerce, artisanat, production"),
                          right=FALSE,
                          include.lowest = TRUE)

#ajout d'une colonne nom portee = V_URB_NOM
OH_geom$PORTEE_NOM <- cut (OH_geom$PORTEE,
                          breaks=c(1,2,3,4,5),
                          labels=c("1.petite - quartier",
                                   "2.moyenne - ville",
                                   "3.grande - région",
                                   "4.exceptionnelle - pays"),
                          right=FALSE,
                          include.lowest = TRUE)

#recodage de la plus petite date = -25
OH_geom$DATE_DEB[OH_geom$DATE_DEB < -25] <- -25
# OH_ponctuels$DATE_DEB[OH_ponctuels$DATE_DEB < -25] <- -25

#----------------------------------- 3. Listes vurb et vusage ----
EF <- st_read(dsn="./data/OH_3geom.sqlite", layer="EF", quiet=TRUE)

sub_vurb <- EF[EF$Code_EF %in% seq(10,60,10), c("V_urbaine", "Code_EF")]
liste_vurb <- paste( substring(sub_vurb$Code_EF,1,1), # vurb en 1,2,3
  ".", stri_trans_totitle(sub_vurb$V_urbaine, opts_brkiter = stri_opts_brkiter(type = "sentence")), #nom vurb avec capitale
  sep="")
liste_vurb <- liste_vurb[order(liste_vurb)]

sub_vusage <- EF[EF$Code_EF %in% unique(OH_geom$V_USAGE), c("Code_EF", "V_usage")]#pour le moment car nom_usages pas bon pour 41 et 43 (?)
liste_vusage <- paste(sub_vusage$Code_EF,
                    ".", 
                   stri_trans_totitle(sub_vusage$V_usage, opts_brkiter = stri_opts_brkiter(type = "sentence")), #nom vurb avec capitale
                    sep="")
liste_vusage <- liste_vusage[order(liste_vusage)] 

