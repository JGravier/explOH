{
    "collab_server" : "",
    "contents" : "###############################################\n## Analyses factorielles\n## Descriptions élémentaires - chapitre 6\n## L. Nahassia, 2018\n##############################################\n\n\n#chargement des tableaux de contingence\ntab_urb_50 <- read.table(\"./data/tab_AFC/tab_urb_50.csv\", sep=\";\", dec=\",\")\ntab_urb_25 <- read.table(\"./data/tab_AFC/tab_urb_25.csv\", sep=\";\", dec=\",\")\ntab_urb_100 <- read.table(\"./data/tab_AFC/tab_urb_100.csv\", sep=\";\", dec=\",\")\ntab_urb_exp <- read.table(\"./data/tab_AFC/tab_urb_exp.csv\", sep=\";\", dec=\",\")\ntab_usage_25 <- read.table(\"./data/tab_AFC/tab_usage_25.csv\", sep=\";\", dec=\",\")\ntab_usage_50 <- read.table(\"./data/tab_AFC/tab_usage_50.csv\", sep=\";\", dec=\",\")\ntab_usage_100 <- read.table(\"./data/tab_AFC/tab_usage_100.csv\", sep=\";\", dec=\",\")\ntab_usage_exp <- read.table(\"./data/tab_AFC/tab_usage_exp.csv\", sep=\";\", dec=\",\")\ntab_portee_25 <- read.table(\"./data/tab_AFC/tab_portee_25.csv\", sep=\";\", dec=\",\")\ntab_portee_50 <- read.table(\"./data/tab_AFC/tab_portee_50.csv\", sep=\";\", dec=\",\")\ntab_portee_100 <- read.table(\"./data/tab_AFC/tab_portee_100.csv\", sep=\";\", dec=\",\")\ntab_portee_exp <- read.table(\"./data/tab_AFC/tab_portee_exp.csv\", sep=\";\", dec=\",\")\n\n\n\n\n# summary.variance.dudi -------------------------------------------------------------------------\n# Crée un tableau pour résumer la variance expliquée par chaque axe + mise en forme pour plotter\n# Entrée : data = resultat dudi.coa\n# Sortie : data.frame avec {n° de composante, variance, % de la variance, variance résultante, factor pour couleur}\n\nsummary.variance.dudi <- function(data){\n  expected_inertia <- 100/max(data$rank)\n  summaryAFC <- data.frame(\n    COMP = seq(1,max(data$rank),1), \n    EIG = data$eig,\n    PCTVAR = 100*data$eig / sum(data$eig),\n    CUMPCTVAR = cumsum(100*data$eig / sum(data$eig)))\n  summaryAFC$CUTSCOLOR <- cut(summaryAFC$PCTVAR, breaks=c(0,expected_inertia,Inf))\n  return(summaryAFC)\n}\n\n\n# barplot.dudi.variance -----------------------------------------------------------------\n# Crée un graphique barplot de la variance expliquée par chaque axe d'un résultat d'AFC\n# Entrée : data = resultat dudi.coa + sumdata = résultat summary.variance.dudi\n# Sortie : un objet ggplot\n\n#paste(as.character(substitute(data)), # ligne pour récupérer le nom de la variable\n\nbarplot.dudi.variance <- function(data, sumdata, titre){\n  expected_inertia <- 100/max(data$rank)\n  plot <- ggplot(data=sumdata, aes(x=COMP, y=PCTVAR, fill=sumdata$CUTSCOLOR)) +\n    geom_bar(stat=\"identity\") +\n    labs(x=\"Composantes\",\n         y=\"Part de la variance expliquée\",\n         title= titre,\n         caption=\"L. Nahassia, Géographie-cités, 2018 | Sources : ToToPI, LAT, CITERES\")+\n    scale_fill_manual(values=alpha(c(\"grey60\",\"#F39C12\"), 0.8)) +\n    geom_hline(aes(yintercept=expected_inertia), colour=\"grey50\", linetype=\"dashed\")+\n    geom_text(x=max(sumdata$COMP)+0.5, \n              y=expected_inertia+2,\n              label=paste(\"inertie moyenne attendue par composante : \", round(expected_inertia, digits=2), \"%\", sep=\"\"),\n              vjust=0,\n              hjust=1,\n              colour=\"grey50\")+\n    theme_fivethirtyeight()+\n    theme_ln()\n  return(plot)\n}\n\n\n# biplot.AFC -----------------------------------------------------------------\n# Crée un graphique biplot des résultats de l'AFC sur les 2 premiers axes (variables+individus)\n# Entrée : data = resultat dudi.coa  ; variable_color = palette pour les variables ; liste_variable = nom des variables ; axes = liste des 2 axes à ploter\n# Sortie : un objet ggplot\n\ncolor_ramp_ind <- colorRampPalette(c(\"grey10\", \"gray60\"))\n\n\nbiplot.AFC <- function(data, axe, variable_color, liste_variable, titre, soustitre){\n  pctvar_A1 <- round(data$eig[axe[[1]]]*100/sum(data$eig))\n  pctvar_A2 <- round(data$eig[axe[[2]]]*100/sum(data$eig))\n  if(nrow(data$li) > 50){lab_periode <- row.names(data$li[seq(1,nrow(data$li),2),])} else {lab_periode <- row.names(data$li)} #selection d'une ligne sur 2 si nombre de périodes trop grand pour lisibilité\n  \n  ggplot()+\n    geom_hline(aes(yintercept=0), colour=\"gray25\")+\n    geom_vline(aes(xintercept=0), colour=\"gray25\")+\n    labs(title=titre,\n         subtitle=soustitre,\n         x=paste(\"Composante n°\", axe[[1]], \" (\",pctvar_A1, \"% de variance expliquée)\", sep=\"\"),\n         y=paste(\"Composante n°\", axe[[2]],\" (\",pctvar_A2, \"% de variance expliquée)\", sep=\"\"),\n         caption=\"L. Nahassia, Géographie-cité, 2018 | Sources : ToToPI, LAT, CITERES\"\n    )+\n    # élargissement des limites du plot\n    expand_limits(x=c(min(data$li[,axe[[1]]])-0.1, max(data$li[,axe[[1]]])+0.1), y=c(min(data$li[,axe[[2]]])-0.1, max(data$li[,axe[[2]]])))+ \n    # points des variables  \n    geom_point(data=data$co,\n               mapping=aes(x=data$co[,axe[[1]]], y=data$co[,axe[[2]]]), #choix des composantes i et j\n               shape=16,\n               size=7,\n               colour=variable_color)+\n    #labels variables\n    geom_text(data=data$co,\n              mapping=aes(x=data$co[,axe[[1]]], y=data$co[,axe[[2]]],label=liste_variable),\n              colour=\"white\",\n              fontface=\"bold\")+\n    # lignes reliant les individus\n    geom_path(data=data$li, \n              mapping=aes(x=data$li[,axe[[1]]], y=data$li[,axe[[2]]]),\n              linetype=\"dotted\",\n              colour= \"gray18\")+ #bcp trop compliqué de faire une line avec gradient\n    #label des individus\n    geom_text_repel(data=lab_periode,\n                    mapping=aes(x=lab_periode[,axe[[1]]], y=lab_periode[,axe[[2]]],label=rownames(lab_periode)),\n                    force=2,\n                    # max.iter = 1000,\n                    box.padding = unit(0.4, \"lines\"), \n                    size=3,\n                    colour=color_ramp_ind(nrow(lab_periode)),\n                    segment.color=\"grey60\")+\n    #points des individsu\n    geom_point(data=data$li, \n               mapping=aes(x=data$li[,axe[[1]]], y=data$li[,axe[[2]]]),\n               shape=18,\n               size=4,\n               colour= color_ramp_ind(nrow(data$li)))+\n    theme_fivethirtyeight()+\n    theme_ln()\n  \n}\n\n\n\n# \n# #---- Plot analyse des contributions ----\n# contrib_AFC_OH <- inertia.dudi(AFC, row.inertia = TRUE, col.inertia = TRUE)\n# # contrib_AFC_OH\n# # contrib_AFC_OH$TOT #inertie des axes\n# # contrib_AFC_OH$row.abs #contribution des lignes à l'inertie des axes (part de la variance expliquée par l'individu), somme en colonne\n# # contrib_AFC_OH$col.abs #idem colonne\n# # contrib_AFC_OH$row.rel #contribution de l'axe à la variance de la ligne (cos²), qualité de représentation de l'individu, somme en ligne\n# # contrib_AFC_OHcol.rel #idem colonne => pour les deux à mettre en absolu\n# \n# #sortie table avec couleurs :\n# #contribution lignes\n# CTR_li <- contrib_AFC_OH$row.abs\n# colnames(CTR_li) <- c(\"Axe 1\", \"Axe 2\", \"Axe 3\", \"Axe 4\", \"Axe 5\")\n# CTR_li <- CTR_li %>% select(c(\"Axe 1\", \"Axe 2\")) #que les axes analysés\n# #contrribution colonnes\n# CTR_co <- contrib_AFC_OH$col.abs\n# colnames(CTR_co) <- c(\"Axe 1\", \"Axe 2\", \"Axe 3\", \"Axe 4\", \"Axe 5\")\n# CTR_co <- CTR_co %>% select(c(\"Axe 1\", \"Axe 2\")) #que les axes analysés\n# #plot # Entrée data = tableau à préparer dessus, titre = titre, couleur = couleur, gestion date : si périodes tri dans l'ordre chronologique les vecteur\n# pligne <- heat.contribvar(data=CTR_li, \n#                           titre=\"Contribution des périodes \\n dans la variance des axes\", \n#                           soustitre=\"\",\n#                           couleur=\"turquoise4\", \n#                           gestion_dates=TRUE)\n# pcol <- heat.contribvar(CTR_co, \n#                         titre=\"Contribution des valeurs urbaines \\n dans la variance des axes\", \n#                         soustitre=\"\",\n#                         couleur=\"turquoise4\", \n#                         gestion_dates=FALSE)\n# \n# #planche tous résultats\n# arrangeGrob(\n#   axes_barplot+labs(caption=\"\"),\n#   pligne+labs(caption=\"\"), \n#   pcol+labs(caption=\"\"),\n#   plot_AFC,\n#   nrow=3,\n#   layout_matrix=rbind(c(1,1,1,2),\n#                       c(4,4,4,2),\n#                       c(4,4,4,3))) %>%\n#   as_ggplot() +\n#   draw_plot_label(label=c(\"A\",\"B\",\"C\",\"D\"), size = 11, x=c(0.05,0.05,0.75,0.75), y=c(0.99,0.66,0.99,0.35))\n# \n# \n# \n# \n# # V_URBAINE\n# #---- AFC100\n# #la présence.absence des fonctions (sans prendre en compte leur localisation), met en évidence 6 périodes urbaines\n# # 0-200, 200-500, 500-1100(défense), 1100-1500 (religieux et inhumation), 1500-1800 (religieux et civil), 1800-2015\n# # Axe 1 : Constructions civiles (très tiré par époque contemporaine) VS structures défensives, qui caractérisent surtout le passage du bas empire que MA\n# # AXE 2 : Religieux et innumation VS Aménagement et lieux de commerces\n# #---- AFC 50 \n# #>> même organisation, mêmes conglomérat d'individus\n# #équivalent à *100, 0-50 qui se distingue + que les périodes d'après\n# #---- AFC HIST \n# #\n# \n# \n# #---- COS2 ligne (axe explique comment l'individu) ----\n# #préparation des données hors fonction\n# #suppression de la dernière colonne inutile\n# cos2_li <- subset(abs(contrib_AFC_OH$row.rel), select = - con.tra)\n# #mettre des noms corrects\n# colnames(cos2_li) <- c(\"Axe 1\", \"Axe 2\", \"Axe 3\", \"Axe 4\", \"Axe 5\")\n# #COS2colonne (axe explique comment l'individu)\n# cos2_col <- subset(abs(contrib_AFC_OH$col.rel), select = - con.tra)\n# colnames(cos2_col) <- c(\"Axe 1\", \"Axe 2\", \"Axe 3\", \"Axe 4\", \"Axe 5\")\n# rownames(cos2_col) <-  c(\"voiries, aménagements\",\"structures défensives et militaires\",\"constructions civiles\",\"édifices religieux\",\"lieux d'inhumation\",\"lieux de commerce, artisanat, production\")\n# heat.contribvar(cos2_col, \"Part de la variance des variables-valeurs_urbaines exprimée par chaque axe\", \"turquoise\")\n# \n# \n# \n# \n\n\n\n\n\n",
    "created" : 1530758259646.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "568991177",
    "id" : "D66EE4A5",
    "lastKnownWriteTime" : 1530802102,
    "last_content_update" : 1530802102130,
    "path" : "D:/Sync/1recherche/1these/SIG/VISU/shiny/explOH_11b/global_AFC.R",
    "project_path" : "global_AFC.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}