{
    "contents" : "################################\n# Shiny app pour afficher les objets selon le temps\n# Octobre 2016\n# UI pour shiny_3_2geom\n################################\nlibrary(shiny)\nlibrary(leaflet)\n\n\n#define UI\nshinyUI(fluidPage(tags$head(tags$link(rel=\"icon\", type=\"image/png\", href=\"favicon.png\"), \n                            tags$title(\"Explorateur d'OH\"),\n                            includeCSS(\"www/explorateur.css\")\n                            #attention pas d'accent dans le css > erreur utf8\n                            ),\n                  \n                  useShinyjs(),\n                  \n                  #titre\n                  titlePanel(h2(\"Plateforme d'exploration des OH\")),\n                  \n                  #paneau principal\n                  sidebarPanel(class=\"bar\", id=\"sidebar\",\n                               \n                               #trouver OF\n                               textInput(\"num_OH\", label =\"Trouver l'OH n°\", width= \"33%\", value = NULL),\n                               \n                               actionButton(\"selec_OH\", label=\"Afficher l'OH\"),\n                               actionButton(\"deselec_OH\", label=\"Déselectionner\"), #inline !\n                               \n                               # bornes temps\n                               br(),br(),\n                               sliderInput(\"limites\", label =\"Période d'intérêt :\", \n                                           min=-25, max=2015, value=c(-25,2015), round = 1, step=50, sep=\" \"),\n                               # textInput(\"resultat\", width= \"33%\", label=\"test\", value = NULL),\n                               \n                               h5(\"Eléments de contexte:\"),\n                               checkboxInput(\"afficher_ens_urb\", label=\"Afficher les ensembles urbains\", value = FALSE),\n                               checkboxInput(\"afficher_traits_rive\", label=\"Afficher les traits de rive\", value = FALSE),\n                               \n                               #type geometriques\n                               #     checkboxGroupInput(\"choix_objet\", label = h4(\"Choix des objets à visualiser\"),\n                               #                        choices =c(\"Polygones\"=\"pg\", \"Lignes\"=\"pl\", \"Points\"=\"pt\"), selected=c(\"pg\",\"pl\",\"pt\"))\n                               \n                               \n                               # fonctions\n                               ## choix en dur > possible de l'extraire des données (mais sous forme de checkbox ?)\n                               \n                               # couleurs selon fonction\n                               radioButtons(\"couleur_OH\", label = \"Différencier les OH selon :\", \n                                            choices = list(\"leur valeur urbaine\" = \"v_urb\", \n                                                           # \"leur portée\" = \"portee\", \n                                                           \"leur durée d'existence\" = \"duree\"), \n                                            selected = \"v_urb\",\n                                            inline = TRUE),\n                               \n                               \n                               # fonctions à afficher\n                               checkboxGroupInput(\"choix_fonctions\", label =\"Fonctions à afficher :\",\n                                                  choices = c(\"1.Voirie, aménagements\"=\"10:19\",\n                                                              \"2.Structures défensives et militaires\"=\"20:29\", \n                                                              \"3.Constructions civiles\"=\"30:39\", \n                                                              \"4.Edifices religieux\"=\"40:49\",\n                                                              \"5.Lieux d'inhumation\"=\"50:59\",\n                                                              \"6.Lieux de commerce, artisanat, production\"=\"60:69\"),\n                                                  selected = c(\"10:19\",\"20:29\",\"30:39\",\"40:49\",\"50:59\",\"60:69\")),\n                               \n                               # ajuster l'échelle y des plots ?\n                               br(),\n                               radioButtons(\"plot_echelle_y\", label = \"Uniformiser les échelles des graphes en ordonnées ?\",\n                                            choices = list(\"Oui\"=\"fixed\",\"Non\"=\"free_y\"),\n                                            selected = \"fixed\",\n                                            inline= TRUE)\n                               \n                   ),\n                  \n          \n            \n              \n                  mainPanel(\n                    #carte\n                    leafletOutput(\"map\"),\n                    br(),\n                    \n                    #plots\n                    plotOutput(\"ohfreq\", brush = brushOpts(id = \"ohfreq_brush\", direction = \"x\"))\n                  )\n                  \n\n#                   #graphe\n#                   fluidRow(\n#                     column(11,class=\"well\", id=\"graphbar\",\n#                            plotOutput(\"ohfreq\", brush = brushOpts(id = \"ohfreq_brush\", direction = \"x\"))))\n                  \n               \n                  \n                  # leafletOutput(\"map\", width=\"100%\", height=\"100%\")\n                  # possible uniquement si template perso\n                  \n                  \n))\n\n",
    "created" : 1476268337883.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3536267223",
    "id" : "6DA0DE8F",
    "lastKnownWriteTime" : 1481042715,
    "path" : "C:/Users/lue/Sync/1recherche/1these/SIG/VISU/visu_temps/shiny_3_2geom/ui.r",
    "project_path" : "ui.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}